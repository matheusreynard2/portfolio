package com.apiestudar.controller;

import com.apiestudar.model.Produto;
import com.apiestudar.service.ProdutoService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("api/produtos")
public class ProdutoController {

	@Autowired
	private ProdutoService produtoService;

	@GetMapping("/listarProdutos")
	public ResponseEntity<List<Produto>> listarProdutos() {
		List<Produto> produtos = produtoService.listarProdutos();
		return new ResponseEntity<>(produtos, HttpStatus.OK);
	}

	@GetMapping("/buscarProduto/{id}")
	public ResponseEntity<Produto> buscarProduto(@PathVariable long id) {
		Optional<Produto> produto = produtoService.buscarProduto(id);
		// Produto n達o foi encontrado pelo id
		if (produto == null)
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		// Produto foi encontrado pelo id
		else
			return new ResponseEntity(produto, HttpStatus.OK);
	}

	@PostMapping("/adicionarProduto")
	public ResponseEntity<Produto> adicionarProduto(@RequestBody Produto produto) {
		Produto produtoAdicionado = (Produto) produtoService.adicionarProduto(produto);
		return new ResponseEntity<>(produtoAdicionado, HttpStatus.CREATED);
	}

	@PutMapping("/atualizarProduto/{id}")
	public ResponseEntity<Produto> atualizarProduto(@PathVariable long id, @RequestBody Produto produtoAtualizado) {
		Produto produto = produtoService.atualizarProduto(id, produtoAtualizado);
		// Se o produto for encontrado pelo id e for atualizado
		if (produto != null)
			return new ResponseEntity<>(produto, HttpStatus.OK);
		// Se o produto n達o for encontrado pelo id e n達o for atualizado
		else
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	}

	@DeleteMapping("/deletarProduto/{id}")
	public ResponseEntity<Void> deletarProduto(@PathVariable int id) {
		boolean estaDeletado = produtoService.deletarProduto(id);
		// Se encontrar o produto pelo id, deleta e retorna o status NO_CONTENT mas se n達o encontrar retorna NOT_FOUND
		if (estaDeletado == true)
			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		else
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	}

}